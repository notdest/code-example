version: '3.7'

services:
  migrations:
    image: fppressa/nginx-fpm:1.17.9-7.4-dev
    command: "php artisan migrate"
    working_dir: /var/www
    environment:
      APP_NAME: parser
      APP_ENV: local
      APP_KEY:
      APP_DEBUG: "true"
      APP_URL: http://localhost

      LOG_CHANNEL: stderr

      DB_CONNECTION: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: parser
      DB_USERNAME: parser
      DB_PASSWORD: parserpass
    depends_on:
      - mysql
    volumes:
      - .:/var/www
    networks:
      - parser_network
    restart: on-failure

  parser:
    image: fppressa/nginx-fpm:1.17.9-7.4-dev
    ports:
      - 8787:80
    working_dir: /var/www
    environment:
      APP_NAME: parser
      APP_ENV: local
      APP_KEY: base64:GFxK2i0YVIT3Te2U9x6/BtD2yQs06EhuiqemBRvXhZI=
      APP_DEBUG: "true"
      APP_URL: http://localhost

      LOG_CHANNEL: stderr

      DB_CONNECTION: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: parser
      DB_USERNAME: parser
      DB_PASSWORD: parserpass

      BROADCAST_DRIVER: log
      CACHE_DRIVER: file
      QUEUE_CONNECTION: sync
      SESSION_DRIVER: file
      SESSION_LIFETIME: 120

      REDIS_HOST: redis
      REDIS_PASSWORD: null
      REDIS_PORT: 6379

      MIX_PUSHER_APP_KEY: "${PUSHER_APP_KEY}"
      MIX_PUSHER_APP_CLUSTER: "${PUSHER_APP_CLUSTER}"

      # XDEBUG config
      DEBUG: "true"
      XDEBUG_HOST: ${XDEBUG_HOST:-host.docker.internal}
      XDEBUG_PORT: ${XDEBUG_PORT:-9000}
    volumes:
      - .:/var/www
      - ./docker/nginx/app.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - migrations
      - mysql
      - redis
    networks:
      - parser_network
    restart: on-failure

  mysql:
    image: percona:5.7.26
    environment:
      MYSQL_DATABASE: 'parser'
      MYSQL_USER: 'parser'
      MYSQL_PASSWORD: 'parserpass'
      MYSQL_ROOT_PASSWORD: 'admin'
    volumes:
      - mysql_data:/var/lib/mysql
      #- ./init:/docker-entrypoint-initdb.d
    networks:
      - parser_network
    restart: on-failure

  redis:
    image: 'redis:5.0.7-alpine'
    volumes:
      - redis_data:/data
    networks:
      - parser_network
    restart: on-failure

networks:
  parser_network:

volumes:
  mysql_data:
  redis_data:
